{"mappings":"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","sources":["src/main.js"],"sourcesContent":["let work = {}\r\nlet todoList = []\r\nlet workIndex\r\nconst newTodo = document.querySelector('#newTodo')\r\n\r\nwindow.onload = function () {\r\n    render()\r\n    //定时器每秒调用一次fnDate()\r\n    setInterval(function () {\r\n        fnDate()\r\n    }, 1000)\r\n}\r\n\r\n//监听回车事件  当输入框获得焦点且回车键被敲击时,调用addTodo()函数\r\ndocument.addEventListener('keypress', function (e) {\r\n    if (document.activeElement.id === 'newTodo' && e.key === 'Enter') {\r\n        addTodo()\r\n    }\r\n})\r\n\r\n//将待做事项列表保存到本地存储中\r\nfunction saveData(data) {\r\n    localStorage.setItem('myTodoList', JSON.stringify(data))\r\n}\r\n\r\n//从本地存储中调用待做列表,当本地存储无对应列表时,返回空数组\r\nfunction loadData() {\r\n    const record = localStorage.getItem('myTodoList')\r\n    if (record !== null) {\r\n        return JSON.parse(record)\r\n    } else {\r\n        return []\r\n    }\r\n}\r\n\r\n//页面渲染 主函数 获取页面需要更新的所有数据,当数据更新时将页面重新渲染\r\nfunction render() {\r\n    let todo = document.querySelector('.todoList'),\r\n        done = document.querySelector('.doneList'),\r\n        left = document.querySelector('.leftCount'),\r\n        todoString = '',\r\n        doneString = '',\r\n        leftCount = 0\r\n    \r\n    document.querySelector('#newTodo').focus()\r\n    todoList = loadData()\r\n    if(todoList.length===0){            //设置遮罩 当没有待办事项时,显示默认遮罩div,当存在条目时,将遮罩隐藏\r\n        document.querySelector('.mask').style.display='flex'\r\n    }else {\r\n        document.querySelector('.mask').style.display='none'\r\n    }\r\n    if (todoList !== null) {\r\n        todoList.map((e) => {\r\n            if (!e.done) {\r\n                todoString = '<li>\\n' +\r\n                    '                    <input type=\"checkbox\" name=\"checkBtn\" class=\"checkBtn\" id=\"' + e.id + '\" onclick=\"check(id,checked)\" >\\n' +\r\n                    '                    <p class=\"content\" id=\"' + 'input' + e.id + '\" ondblclick=edit(id)>' + e.data + '</p>\\n' +\r\n                    '                    <button class=\"closeBtn\"  id=\"' + 'close' + e.id + '\" onclick=remove(id)>×</button>\\n' +\r\n                    '                </li>' + todoString\r\n                leftCount++\r\n            } else {\r\n                doneString += '<li>\\n' +\r\n                    '                    <input type=\"checkbox\" checked name=\"checkBtn\" class=\"checkBtn\" id=\"' + e.id + '\" onclick=\"check(id,checked)\">\\n' +\r\n                    '                    <p class=\"content\" id=\"' + 'input' + e.id + '\" ondblclick=edit(id)>' + e.data + '</p>\\n' +\r\n                    '                    <button class=\"closeBtn\"  id=\"' + 'close' + e.id + '\" onclick=remove(id)>×</button>\\n' +\r\n                    '                </li>'\r\n            }\r\n        })\r\n        todo.innerHTML = todoString\r\n        done.innerHTML = doneString\r\n        left.innerHTML = leftCount.toString() + ' items left'\r\n    } else {\r\n        todo.innerHTML = ''\r\n        done.innerHTML = ''\r\n        left.innerHTML = '0 items left'\r\n    }\r\n}\r\n\r\n//重绘页面 当事项数据更改时,先存储新列表至本地存储中,然后再对页面进行渲染\r\nfunction update(todoList) {\r\n    saveData(todoList)\r\n    render()\r\n}\r\n\r\n// 随机数函数  生成10-12位不等的字符串作为每一条待做事项的唯一Id\r\nfunction uniqueId() {\r\n    return (Number(Math.random().toString().substring(2)) * new Date().getTime()).toString(36).slice(0, -8)\r\n}\r\n\r\n// 新增待做事项条目\r\n// 创建一个数组对象来保存用户输入的数据，数组的每一项都是一个对象\r\n// 对象的\"id\"属性保存着用户输入的数据的唯一id,对象的\"data\"属性保存着用户输入的数据,\"done\"属性可理解为用户输入数据的标签,主要用于之后对多条数据进行分类。\r\n// 每次用户输入完数据，都要更新缓存，并初始化输入框。\r\nfunction addTodo() {\r\n    work = {\r\n        id: '',\r\n        data: '',\r\n        done: false\r\n    }\r\n    newTodo.value = newTodo.value.trim()\r\n    if (newTodo.value === '') {\r\n        alert('内容不能为空')\r\n        newTodo.value = ''\r\n        newTodo.focus()\r\n    } else {\r\n        work.id = uniqueId()\r\n        work.data = newTodo.value\r\n        todoList.push(work)\r\n        saveData(todoList)\r\n        render()\r\n        newTodo.value = ''\r\n        newTodo.focus()\r\n    }\r\n}\r\n\r\n// 查找该唯一id在todoList中对应的位置 并返回其index值\r\nfunction seekIndex(seekId) {\r\n    todoList.forEach((e) => {\r\n        if (e.id === seekId) {\r\n            workIndex = todoList.indexOf(e)\r\n        }\r\n    })\r\n}\r\n\r\n// 当checkbox被点击时, 更新work对象中的done属性,并且更新todoList中对应的work对象,并更新页面\r\nfunction check(checkId, checked) {\r\n    const inputContent = document.getElementById(checkId).nextElementSibling.textContent\r\n    work = {id: checkId, data: inputContent, done: checked}\r\n    seekIndex(work.id)\r\n    todoList.splice(workIndex, 1, work)\r\n    update(todoList)\r\n}\r\n\r\n// 当删除按钮被点击时,删除todoList中的对应条目,并更新页面.\r\nfunction remove(closeId) {       //此处一开始定义函数名为close(),但是onclick无法触发, 原因为函数命名与系统库名close冲突\r\n    seekIndex(closeId.substring(5))\r\n    todoList.splice(workIndex, 1)\r\n    update(todoList)\r\n}\r\n\r\n// 当数据对象的内容框被双击时对数据条目进行重新编辑, 弹出prompt窗口获取新编辑内容,并更新页面\r\nfunction edit(inputId) {\r\n    seekIndex(inputId.substring(5))\r\n    const editContent = window.prompt('重新编辑内容', todoList[workIndex].data).trim()\r\n    if (editContent === '') {\r\n        alert('内容不能为空')\r\n    } else {\r\n        todoList[workIndex].data = editContent\r\n        saveData(todoList)\r\n        render()\r\n    }\r\n}\r\n\r\n//删除所有数据条目 重置本地存储,并更新页面\r\nfunction clearAll() {\r\n    localStorage.clear()\r\n    render()\r\n}\r\n\r\n//filter方法检索所有已完成的事项并返回一个新数组,新数组不包括任何已完成的对象,并更新页面\r\nfunction clearDone() {\r\n    todoList = todoList.filter(e =>\r\n        e.done === false\r\n    )\r\n    update(todoList)\r\n}\r\n\r\n// 获取当前时间 并设置页面中#time1 #time2 元素的内容\r\nfunction fnDate() {\r\n    let timeDiv1 = document.getElementById('time1')\r\n    let timeDiv2 = document.getElementById('time2')\r\n    let date = new Date()\r\n    let year = date.getFullYear() //当前年份\r\n    let month = date.getMonth() //当前月份\r\n    let data = date.getDate() //天\r\n    let hours = date.getHours() //小时\r\n    let minute = date.getMinutes() //分\r\n    let second = date.getSeconds() //秒\r\n    let simpleTime = fnW(hours) + ':' + fnW(minute)\r\n    let detailTime =\r\n        year +\r\n        '-' +\r\n        fnW(month + 1) +\r\n        '-' +\r\n        fnW(data) +\r\n        ' ' +\r\n        fnW(hours) +\r\n        ':' +\r\n        fnW(minute) +\r\n        ':' +\r\n        fnW(second)\r\n    timeDiv1.innerHTML = simpleTime\r\n    timeDiv2.innerHTML = detailTime\r\n}\r\n\r\n// 对时间数据进行处理\r\nfunction fnW(str) {\r\n    let num\r\n    str >= 10 ? (num = str) : (num = '0' + str)\r\n    return num\r\n}\r\n\r\n"],"names":[],"version":3,"file":"index.ea850909.js.map"}